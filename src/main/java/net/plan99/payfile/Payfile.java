// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: payfile.proto

package net.plan99.payfile;

public final class Payfile {
  private Payfile() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface PayFileMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .net.plan99.payfile.PayFileMessage.Type type = 1;
    /**
     * <code>required .net.plan99.payfile.PayFileMessage.Type type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required .net.plan99.payfile.PayFileMessage.Type type = 1;</code>
     */
    net.plan99.payfile.Payfile.PayFileMessage.Type getType();

    // optional .net.plan99.payfile.QueryFiles query_files = 2;
    /**
     * <code>optional .net.plan99.payfile.QueryFiles query_files = 2;</code>
     */
    boolean hasQueryFiles();
    /**
     * <code>optional .net.plan99.payfile.QueryFiles query_files = 2;</code>
     */
    net.plan99.payfile.Payfile.QueryFiles getQueryFiles();
    /**
     * <code>optional .net.plan99.payfile.QueryFiles query_files = 2;</code>
     */
    net.plan99.payfile.Payfile.QueryFilesOrBuilder getQueryFilesOrBuilder();

    // optional .net.plan99.payfile.Manifest manifest = 3;
    /**
     * <code>optional .net.plan99.payfile.Manifest manifest = 3;</code>
     */
    boolean hasManifest();
    /**
     * <code>optional .net.plan99.payfile.Manifest manifest = 3;</code>
     */
    net.plan99.payfile.Payfile.Manifest getManifest();
    /**
     * <code>optional .net.plan99.payfile.Manifest manifest = 3;</code>
     */
    net.plan99.payfile.Payfile.ManifestOrBuilder getManifestOrBuilder();

    // optional bytes payment = 4;
    /**
     * <code>optional bytes payment = 4;</code>
     */
    boolean hasPayment();
    /**
     * <code>optional bytes payment = 4;</code>
     */
    com.google.protobuf.ByteString getPayment();

    // optional .net.plan99.payfile.DownloadChunk download_chunk = 5;
    /**
     * <code>optional .net.plan99.payfile.DownloadChunk download_chunk = 5;</code>
     */
    boolean hasDownloadChunk();
    /**
     * <code>optional .net.plan99.payfile.DownloadChunk download_chunk = 5;</code>
     */
    net.plan99.payfile.Payfile.DownloadChunk getDownloadChunk();
    /**
     * <code>optional .net.plan99.payfile.DownloadChunk download_chunk = 5;</code>
     */
    net.plan99.payfile.Payfile.DownloadChunkOrBuilder getDownloadChunkOrBuilder();

    // optional .net.plan99.payfile.Data data = 6;
    /**
     * <code>optional .net.plan99.payfile.Data data = 6;</code>
     */
    boolean hasData();
    /**
     * <code>optional .net.plan99.payfile.Data data = 6;</code>
     */
    net.plan99.payfile.Payfile.Data getData();
    /**
     * <code>optional .net.plan99.payfile.Data data = 6;</code>
     */
    net.plan99.payfile.Payfile.DataOrBuilder getDataOrBuilder();

    // optional .net.plan99.payfile.Error error = 7;
    /**
     * <code>optional .net.plan99.payfile.Error error = 7;</code>
     */
    boolean hasError();
    /**
     * <code>optional .net.plan99.payfile.Error error = 7;</code>
     */
    net.plan99.payfile.Payfile.Error getError();
    /**
     * <code>optional .net.plan99.payfile.Error error = 7;</code>
     */
    net.plan99.payfile.Payfile.ErrorOrBuilder getErrorOrBuilder();
  }
  /**
   * Protobuf type {@code net.plan99.payfile.PayFileMessage}
   */
  public static final class PayFileMessage extends
      com.google.protobuf.GeneratedMessage
      implements PayFileMessageOrBuilder {
    // Use PayFileMessage.newBuilder() to construct.
    private PayFileMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PayFileMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PayFileMessage defaultInstance;
    public static PayFileMessage getDefaultInstance() {
      return defaultInstance;
    }

    public PayFileMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PayFileMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              net.plan99.payfile.Payfile.PayFileMessage.Type value = net.plan99.payfile.Payfile.PayFileMessage.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              net.plan99.payfile.Payfile.QueryFiles.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = queryFiles_.toBuilder();
              }
              queryFiles_ = input.readMessage(net.plan99.payfile.Payfile.QueryFiles.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(queryFiles_);
                queryFiles_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              net.plan99.payfile.Payfile.Manifest.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = manifest_.toBuilder();
              }
              manifest_ = input.readMessage(net.plan99.payfile.Payfile.Manifest.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(manifest_);
                manifest_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              payment_ = input.readBytes();
              break;
            }
            case 42: {
              net.plan99.payfile.Payfile.DownloadChunk.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = downloadChunk_.toBuilder();
              }
              downloadChunk_ = input.readMessage(net.plan99.payfile.Payfile.DownloadChunk.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(downloadChunk_);
                downloadChunk_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              net.plan99.payfile.Payfile.Data.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = data_.toBuilder();
              }
              data_ = input.readMessage(net.plan99.payfile.Payfile.Data.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(data_);
                data_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 58: {
              net.plan99.payfile.Payfile.Error.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = error_.toBuilder();
              }
              error_ = input.readMessage(net.plan99.payfile.Payfile.Error.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(error_);
                error_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_PayFileMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_PayFileMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.plan99.payfile.Payfile.PayFileMessage.class, net.plan99.payfile.Payfile.PayFileMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<PayFileMessage> PARSER =
        new com.google.protobuf.AbstractParser<PayFileMessage>() {
      public PayFileMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PayFileMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PayFileMessage> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code net.plan99.payfile.PayFileMessage.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>QUERY_FILES = 1;</code>
       *
       * <pre>
       * Protocol goes like this: firstly you find out what files are available by having the client
       * send a QUERY_FILES message to the server.
       * </pre>
       */
      QUERY_FILES(0, 1),
      /**
       * <code>MANIFEST = 2;</code>
       *
       * <pre>
       * The server sends a MANIFEST telling what it's got and how much it's gonna cost you ...
       * </pre>
       */
      MANIFEST(1, 2),
      /**
       * <code>PAYMENT = 3;</code>
       *
       * <pre>
       * Client sets up a micropayment channel to the server for however much money it wants.
       * These messages just pass opaque byte arrays back and forth, the actual payment channels
       * protocol is embedded inside this one.
       * </pre>
       */
      PAYMENT(2, 3),
      /**
       * <code>DOWNLOAD_CHUNK = 4;</code>
       *
       * <pre>
       * Client sends a DOWNLOAD_CHUNK message asking for a part of the given file, including
       * a micropayment for doing so.
       * </pre>
       */
      DOWNLOAD_CHUNK(3, 4),
      /**
       * <code>DATA = 5;</code>
       *
       * <pre>
       * Server sends back a DATA message containing the requested chunk.
       * </pre>
       */
      DATA(4, 5),
      /**
       * <code>ERROR = 6;</code>
       *
       * <pre>
       * Either side can send this.
       * </pre>
       */
      ERROR(5, 6),
      ;

      /**
       * <code>QUERY_FILES = 1;</code>
       *
       * <pre>
       * Protocol goes like this: firstly you find out what files are available by having the client
       * send a QUERY_FILES message to the server.
       * </pre>
       */
      public static final int QUERY_FILES_VALUE = 1;
      /**
       * <code>MANIFEST = 2;</code>
       *
       * <pre>
       * The server sends a MANIFEST telling what it's got and how much it's gonna cost you ...
       * </pre>
       */
      public static final int MANIFEST_VALUE = 2;
      /**
       * <code>PAYMENT = 3;</code>
       *
       * <pre>
       * Client sets up a micropayment channel to the server for however much money it wants.
       * These messages just pass opaque byte arrays back and forth, the actual payment channels
       * protocol is embedded inside this one.
       * </pre>
       */
      public static final int PAYMENT_VALUE = 3;
      /**
       * <code>DOWNLOAD_CHUNK = 4;</code>
       *
       * <pre>
       * Client sends a DOWNLOAD_CHUNK message asking for a part of the given file, including
       * a micropayment for doing so.
       * </pre>
       */
      public static final int DOWNLOAD_CHUNK_VALUE = 4;
      /**
       * <code>DATA = 5;</code>
       *
       * <pre>
       * Server sends back a DATA message containing the requested chunk.
       * </pre>
       */
      public static final int DATA_VALUE = 5;
      /**
       * <code>ERROR = 6;</code>
       *
       * <pre>
       * Either side can send this.
       * </pre>
       */
      public static final int ERROR_VALUE = 6;


      public final int getNumber() { return value; }

      public static Type valueOf(int value) {
        switch (value) {
          case 1: return QUERY_FILES;
          case 2: return MANIFEST;
          case 3: return PAYMENT;
          case 4: return DOWNLOAD_CHUNK;
          case 5: return DATA;
          case 6: return ERROR;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return net.plan99.payfile.Payfile.PayFileMessage.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Type(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:net.plan99.payfile.PayFileMessage.Type)
    }

    private int bitField0_;
    // required .net.plan99.payfile.PayFileMessage.Type type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private net.plan99.payfile.Payfile.PayFileMessage.Type type_;
    /**
     * <code>required .net.plan99.payfile.PayFileMessage.Type type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .net.plan99.payfile.PayFileMessage.Type type = 1;</code>
     */
    public net.plan99.payfile.Payfile.PayFileMessage.Type getType() {
      return type_;
    }

    // optional .net.plan99.payfile.QueryFiles query_files = 2;
    public static final int QUERY_FILES_FIELD_NUMBER = 2;
    private net.plan99.payfile.Payfile.QueryFiles queryFiles_;
    /**
     * <code>optional .net.plan99.payfile.QueryFiles query_files = 2;</code>
     */
    public boolean hasQueryFiles() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .net.plan99.payfile.QueryFiles query_files = 2;</code>
     */
    public net.plan99.payfile.Payfile.QueryFiles getQueryFiles() {
      return queryFiles_;
    }
    /**
     * <code>optional .net.plan99.payfile.QueryFiles query_files = 2;</code>
     */
    public net.plan99.payfile.Payfile.QueryFilesOrBuilder getQueryFilesOrBuilder() {
      return queryFiles_;
    }

    // optional .net.plan99.payfile.Manifest manifest = 3;
    public static final int MANIFEST_FIELD_NUMBER = 3;
    private net.plan99.payfile.Payfile.Manifest manifest_;
    /**
     * <code>optional .net.plan99.payfile.Manifest manifest = 3;</code>
     */
    public boolean hasManifest() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .net.plan99.payfile.Manifest manifest = 3;</code>
     */
    public net.plan99.payfile.Payfile.Manifest getManifest() {
      return manifest_;
    }
    /**
     * <code>optional .net.plan99.payfile.Manifest manifest = 3;</code>
     */
    public net.plan99.payfile.Payfile.ManifestOrBuilder getManifestOrBuilder() {
      return manifest_;
    }

    // optional bytes payment = 4;
    public static final int PAYMENT_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString payment_;
    /**
     * <code>optional bytes payment = 4;</code>
     */
    public boolean hasPayment() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bytes payment = 4;</code>
     */
    public com.google.protobuf.ByteString getPayment() {
      return payment_;
    }

    // optional .net.plan99.payfile.DownloadChunk download_chunk = 5;
    public static final int DOWNLOAD_CHUNK_FIELD_NUMBER = 5;
    private net.plan99.payfile.Payfile.DownloadChunk downloadChunk_;
    /**
     * <code>optional .net.plan99.payfile.DownloadChunk download_chunk = 5;</code>
     */
    public boolean hasDownloadChunk() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .net.plan99.payfile.DownloadChunk download_chunk = 5;</code>
     */
    public net.plan99.payfile.Payfile.DownloadChunk getDownloadChunk() {
      return downloadChunk_;
    }
    /**
     * <code>optional .net.plan99.payfile.DownloadChunk download_chunk = 5;</code>
     */
    public net.plan99.payfile.Payfile.DownloadChunkOrBuilder getDownloadChunkOrBuilder() {
      return downloadChunk_;
    }

    // optional .net.plan99.payfile.Data data = 6;
    public static final int DATA_FIELD_NUMBER = 6;
    private net.plan99.payfile.Payfile.Data data_;
    /**
     * <code>optional .net.plan99.payfile.Data data = 6;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .net.plan99.payfile.Data data = 6;</code>
     */
    public net.plan99.payfile.Payfile.Data getData() {
      return data_;
    }
    /**
     * <code>optional .net.plan99.payfile.Data data = 6;</code>
     */
    public net.plan99.payfile.Payfile.DataOrBuilder getDataOrBuilder() {
      return data_;
    }

    // optional .net.plan99.payfile.Error error = 7;
    public static final int ERROR_FIELD_NUMBER = 7;
    private net.plan99.payfile.Payfile.Error error_;
    /**
     * <code>optional .net.plan99.payfile.Error error = 7;</code>
     */
    public boolean hasError() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .net.plan99.payfile.Error error = 7;</code>
     */
    public net.plan99.payfile.Payfile.Error getError() {
      return error_;
    }
    /**
     * <code>optional .net.plan99.payfile.Error error = 7;</code>
     */
    public net.plan99.payfile.Payfile.ErrorOrBuilder getErrorOrBuilder() {
      return error_;
    }

    private void initFields() {
      type_ = net.plan99.payfile.Payfile.PayFileMessage.Type.QUERY_FILES;
      queryFiles_ = net.plan99.payfile.Payfile.QueryFiles.getDefaultInstance();
      manifest_ = net.plan99.payfile.Payfile.Manifest.getDefaultInstance();
      payment_ = com.google.protobuf.ByteString.EMPTY;
      downloadChunk_ = net.plan99.payfile.Payfile.DownloadChunk.getDefaultInstance();
      data_ = net.plan99.payfile.Payfile.Data.getDefaultInstance();
      error_ = net.plan99.payfile.Payfile.Error.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasQueryFiles()) {
        if (!getQueryFiles().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasManifest()) {
        if (!getManifest().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasDownloadChunk()) {
        if (!getDownloadChunk().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasData()) {
        if (!getData().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasError()) {
        if (!getError().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, queryFiles_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, manifest_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, payment_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, downloadChunk_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, data_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, error_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, queryFiles_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, manifest_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, payment_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, downloadChunk_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, data_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, error_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.plan99.payfile.Payfile.PayFileMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.plan99.payfile.Payfile.PayFileMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.plan99.payfile.Payfile.PayFileMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.plan99.payfile.Payfile.PayFileMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.plan99.payfile.Payfile.PayFileMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.plan99.payfile.Payfile.PayFileMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.plan99.payfile.Payfile.PayFileMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.plan99.payfile.Payfile.PayFileMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.plan99.payfile.Payfile.PayFileMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.plan99.payfile.Payfile.PayFileMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.plan99.payfile.Payfile.PayFileMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code net.plan99.payfile.PayFileMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.plan99.payfile.Payfile.PayFileMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_PayFileMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_PayFileMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.plan99.payfile.Payfile.PayFileMessage.class, net.plan99.payfile.Payfile.PayFileMessage.Builder.class);
      }

      // Construct using net.plan99.payfile.Payfile.PayFileMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getQueryFilesFieldBuilder();
          getManifestFieldBuilder();
          getDownloadChunkFieldBuilder();
          getDataFieldBuilder();
          getErrorFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = net.plan99.payfile.Payfile.PayFileMessage.Type.QUERY_FILES;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (queryFilesBuilder_ == null) {
          queryFiles_ = net.plan99.payfile.Payfile.QueryFiles.getDefaultInstance();
        } else {
          queryFilesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (manifestBuilder_ == null) {
          manifest_ = net.plan99.payfile.Payfile.Manifest.getDefaultInstance();
        } else {
          manifestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        payment_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (downloadChunkBuilder_ == null) {
          downloadChunk_ = net.plan99.payfile.Payfile.DownloadChunk.getDefaultInstance();
        } else {
          downloadChunkBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (dataBuilder_ == null) {
          data_ = net.plan99.payfile.Payfile.Data.getDefaultInstance();
        } else {
          dataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (errorBuilder_ == null) {
          error_ = net.plan99.payfile.Payfile.Error.getDefaultInstance();
        } else {
          errorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_PayFileMessage_descriptor;
      }

      public net.plan99.payfile.Payfile.PayFileMessage getDefaultInstanceForType() {
        return net.plan99.payfile.Payfile.PayFileMessage.getDefaultInstance();
      }

      public net.plan99.payfile.Payfile.PayFileMessage build() {
        net.plan99.payfile.Payfile.PayFileMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.plan99.payfile.Payfile.PayFileMessage buildPartial() {
        net.plan99.payfile.Payfile.PayFileMessage result = new net.plan99.payfile.Payfile.PayFileMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (queryFilesBuilder_ == null) {
          result.queryFiles_ = queryFiles_;
        } else {
          result.queryFiles_ = queryFilesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (manifestBuilder_ == null) {
          result.manifest_ = manifest_;
        } else {
          result.manifest_ = manifestBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.payment_ = payment_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (downloadChunkBuilder_ == null) {
          result.downloadChunk_ = downloadChunk_;
        } else {
          result.downloadChunk_ = downloadChunkBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (dataBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (errorBuilder_ == null) {
          result.error_ = error_;
        } else {
          result.error_ = errorBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.plan99.payfile.Payfile.PayFileMessage) {
          return mergeFrom((net.plan99.payfile.Payfile.PayFileMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.plan99.payfile.Payfile.PayFileMessage other) {
        if (other == net.plan99.payfile.Payfile.PayFileMessage.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasQueryFiles()) {
          mergeQueryFiles(other.getQueryFiles());
        }
        if (other.hasManifest()) {
          mergeManifest(other.getManifest());
        }
        if (other.hasPayment()) {
          setPayment(other.getPayment());
        }
        if (other.hasDownloadChunk()) {
          mergeDownloadChunk(other.getDownloadChunk());
        }
        if (other.hasData()) {
          mergeData(other.getData());
        }
        if (other.hasError()) {
          mergeError(other.getError());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (hasQueryFiles()) {
          if (!getQueryFiles().isInitialized()) {
            
            return false;
          }
        }
        if (hasManifest()) {
          if (!getManifest().isInitialized()) {
            
            return false;
          }
        }
        if (hasDownloadChunk()) {
          if (!getDownloadChunk().isInitialized()) {
            
            return false;
          }
        }
        if (hasData()) {
          if (!getData().isInitialized()) {
            
            return false;
          }
        }
        if (hasError()) {
          if (!getError().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.plan99.payfile.Payfile.PayFileMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.plan99.payfile.Payfile.PayFileMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .net.plan99.payfile.PayFileMessage.Type type = 1;
      private net.plan99.payfile.Payfile.PayFileMessage.Type type_ = net.plan99.payfile.Payfile.PayFileMessage.Type.QUERY_FILES;
      /**
       * <code>required .net.plan99.payfile.PayFileMessage.Type type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .net.plan99.payfile.PayFileMessage.Type type = 1;</code>
       */
      public net.plan99.payfile.Payfile.PayFileMessage.Type getType() {
        return type_;
      }
      /**
       * <code>required .net.plan99.payfile.PayFileMessage.Type type = 1;</code>
       */
      public Builder setType(net.plan99.payfile.Payfile.PayFileMessage.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .net.plan99.payfile.PayFileMessage.Type type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = net.plan99.payfile.Payfile.PayFileMessage.Type.QUERY_FILES;
        onChanged();
        return this;
      }

      // optional .net.plan99.payfile.QueryFiles query_files = 2;
      private net.plan99.payfile.Payfile.QueryFiles queryFiles_ = net.plan99.payfile.Payfile.QueryFiles.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          net.plan99.payfile.Payfile.QueryFiles, net.plan99.payfile.Payfile.QueryFiles.Builder, net.plan99.payfile.Payfile.QueryFilesOrBuilder> queryFilesBuilder_;
      /**
       * <code>optional .net.plan99.payfile.QueryFiles query_files = 2;</code>
       */
      public boolean hasQueryFiles() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .net.plan99.payfile.QueryFiles query_files = 2;</code>
       */
      public net.plan99.payfile.Payfile.QueryFiles getQueryFiles() {
        if (queryFilesBuilder_ == null) {
          return queryFiles_;
        } else {
          return queryFilesBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .net.plan99.payfile.QueryFiles query_files = 2;</code>
       */
      public Builder setQueryFiles(net.plan99.payfile.Payfile.QueryFiles value) {
        if (queryFilesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          queryFiles_ = value;
          onChanged();
        } else {
          queryFilesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .net.plan99.payfile.QueryFiles query_files = 2;</code>
       */
      public Builder setQueryFiles(
          net.plan99.payfile.Payfile.QueryFiles.Builder builderForValue) {
        if (queryFilesBuilder_ == null) {
          queryFiles_ = builderForValue.build();
          onChanged();
        } else {
          queryFilesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .net.plan99.payfile.QueryFiles query_files = 2;</code>
       */
      public Builder mergeQueryFiles(net.plan99.payfile.Payfile.QueryFiles value) {
        if (queryFilesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              queryFiles_ != net.plan99.payfile.Payfile.QueryFiles.getDefaultInstance()) {
            queryFiles_ =
              net.plan99.payfile.Payfile.QueryFiles.newBuilder(queryFiles_).mergeFrom(value).buildPartial();
          } else {
            queryFiles_ = value;
          }
          onChanged();
        } else {
          queryFilesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .net.plan99.payfile.QueryFiles query_files = 2;</code>
       */
      public Builder clearQueryFiles() {
        if (queryFilesBuilder_ == null) {
          queryFiles_ = net.plan99.payfile.Payfile.QueryFiles.getDefaultInstance();
          onChanged();
        } else {
          queryFilesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .net.plan99.payfile.QueryFiles query_files = 2;</code>
       */
      public net.plan99.payfile.Payfile.QueryFiles.Builder getQueryFilesBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getQueryFilesFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .net.plan99.payfile.QueryFiles query_files = 2;</code>
       */
      public net.plan99.payfile.Payfile.QueryFilesOrBuilder getQueryFilesOrBuilder() {
        if (queryFilesBuilder_ != null) {
          return queryFilesBuilder_.getMessageOrBuilder();
        } else {
          return queryFiles_;
        }
      }
      /**
       * <code>optional .net.plan99.payfile.QueryFiles query_files = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          net.plan99.payfile.Payfile.QueryFiles, net.plan99.payfile.Payfile.QueryFiles.Builder, net.plan99.payfile.Payfile.QueryFilesOrBuilder> 
          getQueryFilesFieldBuilder() {
        if (queryFilesBuilder_ == null) {
          queryFilesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              net.plan99.payfile.Payfile.QueryFiles, net.plan99.payfile.Payfile.QueryFiles.Builder, net.plan99.payfile.Payfile.QueryFilesOrBuilder>(
                  queryFiles_,
                  getParentForChildren(),
                  isClean());
          queryFiles_ = null;
        }
        return queryFilesBuilder_;
      }

      // optional .net.plan99.payfile.Manifest manifest = 3;
      private net.plan99.payfile.Payfile.Manifest manifest_ = net.plan99.payfile.Payfile.Manifest.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          net.plan99.payfile.Payfile.Manifest, net.plan99.payfile.Payfile.Manifest.Builder, net.plan99.payfile.Payfile.ManifestOrBuilder> manifestBuilder_;
      /**
       * <code>optional .net.plan99.payfile.Manifest manifest = 3;</code>
       */
      public boolean hasManifest() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .net.plan99.payfile.Manifest manifest = 3;</code>
       */
      public net.plan99.payfile.Payfile.Manifest getManifest() {
        if (manifestBuilder_ == null) {
          return manifest_;
        } else {
          return manifestBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .net.plan99.payfile.Manifest manifest = 3;</code>
       */
      public Builder setManifest(net.plan99.payfile.Payfile.Manifest value) {
        if (manifestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          manifest_ = value;
          onChanged();
        } else {
          manifestBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .net.plan99.payfile.Manifest manifest = 3;</code>
       */
      public Builder setManifest(
          net.plan99.payfile.Payfile.Manifest.Builder builderForValue) {
        if (manifestBuilder_ == null) {
          manifest_ = builderForValue.build();
          onChanged();
        } else {
          manifestBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .net.plan99.payfile.Manifest manifest = 3;</code>
       */
      public Builder mergeManifest(net.plan99.payfile.Payfile.Manifest value) {
        if (manifestBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              manifest_ != net.plan99.payfile.Payfile.Manifest.getDefaultInstance()) {
            manifest_ =
              net.plan99.payfile.Payfile.Manifest.newBuilder(manifest_).mergeFrom(value).buildPartial();
          } else {
            manifest_ = value;
          }
          onChanged();
        } else {
          manifestBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .net.plan99.payfile.Manifest manifest = 3;</code>
       */
      public Builder clearManifest() {
        if (manifestBuilder_ == null) {
          manifest_ = net.plan99.payfile.Payfile.Manifest.getDefaultInstance();
          onChanged();
        } else {
          manifestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .net.plan99.payfile.Manifest manifest = 3;</code>
       */
      public net.plan99.payfile.Payfile.Manifest.Builder getManifestBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getManifestFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .net.plan99.payfile.Manifest manifest = 3;</code>
       */
      public net.plan99.payfile.Payfile.ManifestOrBuilder getManifestOrBuilder() {
        if (manifestBuilder_ != null) {
          return manifestBuilder_.getMessageOrBuilder();
        } else {
          return manifest_;
        }
      }
      /**
       * <code>optional .net.plan99.payfile.Manifest manifest = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          net.plan99.payfile.Payfile.Manifest, net.plan99.payfile.Payfile.Manifest.Builder, net.plan99.payfile.Payfile.ManifestOrBuilder> 
          getManifestFieldBuilder() {
        if (manifestBuilder_ == null) {
          manifestBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              net.plan99.payfile.Payfile.Manifest, net.plan99.payfile.Payfile.Manifest.Builder, net.plan99.payfile.Payfile.ManifestOrBuilder>(
                  manifest_,
                  getParentForChildren(),
                  isClean());
          manifest_ = null;
        }
        return manifestBuilder_;
      }

      // optional bytes payment = 4;
      private com.google.protobuf.ByteString payment_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes payment = 4;</code>
       */
      public boolean hasPayment() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bytes payment = 4;</code>
       */
      public com.google.protobuf.ByteString getPayment() {
        return payment_;
      }
      /**
       * <code>optional bytes payment = 4;</code>
       */
      public Builder setPayment(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        payment_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes payment = 4;</code>
       */
      public Builder clearPayment() {
        bitField0_ = (bitField0_ & ~0x00000008);
        payment_ = getDefaultInstance().getPayment();
        onChanged();
        return this;
      }

      // optional .net.plan99.payfile.DownloadChunk download_chunk = 5;
      private net.plan99.payfile.Payfile.DownloadChunk downloadChunk_ = net.plan99.payfile.Payfile.DownloadChunk.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          net.plan99.payfile.Payfile.DownloadChunk, net.plan99.payfile.Payfile.DownloadChunk.Builder, net.plan99.payfile.Payfile.DownloadChunkOrBuilder> downloadChunkBuilder_;
      /**
       * <code>optional .net.plan99.payfile.DownloadChunk download_chunk = 5;</code>
       */
      public boolean hasDownloadChunk() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .net.plan99.payfile.DownloadChunk download_chunk = 5;</code>
       */
      public net.plan99.payfile.Payfile.DownloadChunk getDownloadChunk() {
        if (downloadChunkBuilder_ == null) {
          return downloadChunk_;
        } else {
          return downloadChunkBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .net.plan99.payfile.DownloadChunk download_chunk = 5;</code>
       */
      public Builder setDownloadChunk(net.plan99.payfile.Payfile.DownloadChunk value) {
        if (downloadChunkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          downloadChunk_ = value;
          onChanged();
        } else {
          downloadChunkBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .net.plan99.payfile.DownloadChunk download_chunk = 5;</code>
       */
      public Builder setDownloadChunk(
          net.plan99.payfile.Payfile.DownloadChunk.Builder builderForValue) {
        if (downloadChunkBuilder_ == null) {
          downloadChunk_ = builderForValue.build();
          onChanged();
        } else {
          downloadChunkBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .net.plan99.payfile.DownloadChunk download_chunk = 5;</code>
       */
      public Builder mergeDownloadChunk(net.plan99.payfile.Payfile.DownloadChunk value) {
        if (downloadChunkBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              downloadChunk_ != net.plan99.payfile.Payfile.DownloadChunk.getDefaultInstance()) {
            downloadChunk_ =
              net.plan99.payfile.Payfile.DownloadChunk.newBuilder(downloadChunk_).mergeFrom(value).buildPartial();
          } else {
            downloadChunk_ = value;
          }
          onChanged();
        } else {
          downloadChunkBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .net.plan99.payfile.DownloadChunk download_chunk = 5;</code>
       */
      public Builder clearDownloadChunk() {
        if (downloadChunkBuilder_ == null) {
          downloadChunk_ = net.plan99.payfile.Payfile.DownloadChunk.getDefaultInstance();
          onChanged();
        } else {
          downloadChunkBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .net.plan99.payfile.DownloadChunk download_chunk = 5;</code>
       */
      public net.plan99.payfile.Payfile.DownloadChunk.Builder getDownloadChunkBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getDownloadChunkFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .net.plan99.payfile.DownloadChunk download_chunk = 5;</code>
       */
      public net.plan99.payfile.Payfile.DownloadChunkOrBuilder getDownloadChunkOrBuilder() {
        if (downloadChunkBuilder_ != null) {
          return downloadChunkBuilder_.getMessageOrBuilder();
        } else {
          return downloadChunk_;
        }
      }
      /**
       * <code>optional .net.plan99.payfile.DownloadChunk download_chunk = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          net.plan99.payfile.Payfile.DownloadChunk, net.plan99.payfile.Payfile.DownloadChunk.Builder, net.plan99.payfile.Payfile.DownloadChunkOrBuilder> 
          getDownloadChunkFieldBuilder() {
        if (downloadChunkBuilder_ == null) {
          downloadChunkBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              net.plan99.payfile.Payfile.DownloadChunk, net.plan99.payfile.Payfile.DownloadChunk.Builder, net.plan99.payfile.Payfile.DownloadChunkOrBuilder>(
                  downloadChunk_,
                  getParentForChildren(),
                  isClean());
          downloadChunk_ = null;
        }
        return downloadChunkBuilder_;
      }

      // optional .net.plan99.payfile.Data data = 6;
      private net.plan99.payfile.Payfile.Data data_ = net.plan99.payfile.Payfile.Data.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          net.plan99.payfile.Payfile.Data, net.plan99.payfile.Payfile.Data.Builder, net.plan99.payfile.Payfile.DataOrBuilder> dataBuilder_;
      /**
       * <code>optional .net.plan99.payfile.Data data = 6;</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .net.plan99.payfile.Data data = 6;</code>
       */
      public net.plan99.payfile.Payfile.Data getData() {
        if (dataBuilder_ == null) {
          return data_;
        } else {
          return dataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .net.plan99.payfile.Data data = 6;</code>
       */
      public Builder setData(net.plan99.payfile.Payfile.Data value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          dataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .net.plan99.payfile.Data data = 6;</code>
       */
      public Builder setData(
          net.plan99.payfile.Payfile.Data.Builder builderForValue) {
        if (dataBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          dataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .net.plan99.payfile.Data data = 6;</code>
       */
      public Builder mergeData(net.plan99.payfile.Payfile.Data value) {
        if (dataBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              data_ != net.plan99.payfile.Payfile.Data.getDefaultInstance()) {
            data_ =
              net.plan99.payfile.Payfile.Data.newBuilder(data_).mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          dataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .net.plan99.payfile.Data data = 6;</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = net.plan99.payfile.Payfile.Data.getDefaultInstance();
          onChanged();
        } else {
          dataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .net.plan99.payfile.Data data = 6;</code>
       */
      public net.plan99.payfile.Payfile.Data.Builder getDataBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .net.plan99.payfile.Data data = 6;</code>
       */
      public net.plan99.payfile.Payfile.DataOrBuilder getDataOrBuilder() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilder();
        } else {
          return data_;
        }
      }
      /**
       * <code>optional .net.plan99.payfile.Data data = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          net.plan99.payfile.Payfile.Data, net.plan99.payfile.Payfile.Data.Builder, net.plan99.payfile.Payfile.DataOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              net.plan99.payfile.Payfile.Data, net.plan99.payfile.Payfile.Data.Builder, net.plan99.payfile.Payfile.DataOrBuilder>(
                  data_,
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }

      // optional .net.plan99.payfile.Error error = 7;
      private net.plan99.payfile.Payfile.Error error_ = net.plan99.payfile.Payfile.Error.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          net.plan99.payfile.Payfile.Error, net.plan99.payfile.Payfile.Error.Builder, net.plan99.payfile.Payfile.ErrorOrBuilder> errorBuilder_;
      /**
       * <code>optional .net.plan99.payfile.Error error = 7;</code>
       */
      public boolean hasError() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .net.plan99.payfile.Error error = 7;</code>
       */
      public net.plan99.payfile.Payfile.Error getError() {
        if (errorBuilder_ == null) {
          return error_;
        } else {
          return errorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .net.plan99.payfile.Error error = 7;</code>
       */
      public Builder setError(net.plan99.payfile.Payfile.Error value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          error_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .net.plan99.payfile.Error error = 7;</code>
       */
      public Builder setError(
          net.plan99.payfile.Payfile.Error.Builder builderForValue) {
        if (errorBuilder_ == null) {
          error_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .net.plan99.payfile.Error error = 7;</code>
       */
      public Builder mergeError(net.plan99.payfile.Payfile.Error value) {
        if (errorBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              error_ != net.plan99.payfile.Payfile.Error.getDefaultInstance()) {
            error_ =
              net.plan99.payfile.Payfile.Error.newBuilder(error_).mergeFrom(value).buildPartial();
          } else {
            error_ = value;
          }
          onChanged();
        } else {
          errorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .net.plan99.payfile.Error error = 7;</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          error_ = net.plan99.payfile.Payfile.Error.getDefaultInstance();
          onChanged();
        } else {
          errorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .net.plan99.payfile.Error error = 7;</code>
       */
      public net.plan99.payfile.Payfile.Error.Builder getErrorBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .net.plan99.payfile.Error error = 7;</code>
       */
      public net.plan99.payfile.Payfile.ErrorOrBuilder getErrorOrBuilder() {
        if (errorBuilder_ != null) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          return error_;
        }
      }
      /**
       * <code>optional .net.plan99.payfile.Error error = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          net.plan99.payfile.Payfile.Error, net.plan99.payfile.Payfile.Error.Builder, net.plan99.payfile.Payfile.ErrorOrBuilder> 
          getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          errorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              net.plan99.payfile.Payfile.Error, net.plan99.payfile.Payfile.Error.Builder, net.plan99.payfile.Payfile.ErrorOrBuilder>(
                  error_,
                  getParentForChildren(),
                  isClean());
          error_ = null;
        }
        return errorBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:net.plan99.payfile.PayFileMessage)
    }

    static {
      defaultInstance = new PayFileMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:net.plan99.payfile.PayFileMessage)
  }

  public interface QueryFilesOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string user_agent = 1;
    /**
     * <code>required string user_agent = 1;</code>
     *
     * <pre>
     * The program that's gonna do the downloading.
     * </pre>
     */
    boolean hasUserAgent();
    /**
     * <code>required string user_agent = 1;</code>
     *
     * <pre>
     * The program that's gonna do the downloading.
     * </pre>
     */
    java.lang.String getUserAgent();
    /**
     * <code>required string user_agent = 1;</code>
     *
     * <pre>
     * The program that's gonna do the downloading.
     * </pre>
     */
    com.google.protobuf.ByteString
        getUserAgentBytes();

    // required string bitcoin_network = 2;
    /**
     * <code>required string bitcoin_network = 2;</code>
     *
     * <pre>
     * Verify up-front that we're on the same Bitcoin network (main, test, regtest, litecoin, etc).
     * If this doesn't match the server network we'll get an ERROR after QUERY_FILES.
     * </pre>
     */
    boolean hasBitcoinNetwork();
    /**
     * <code>required string bitcoin_network = 2;</code>
     *
     * <pre>
     * Verify up-front that we're on the same Bitcoin network (main, test, regtest, litecoin, etc).
     * If this doesn't match the server network we'll get an ERROR after QUERY_FILES.
     * </pre>
     */
    java.lang.String getBitcoinNetwork();
    /**
     * <code>required string bitcoin_network = 2;</code>
     *
     * <pre>
     * Verify up-front that we're on the same Bitcoin network (main, test, regtest, litecoin, etc).
     * If this doesn't match the server network we'll get an ERROR after QUERY_FILES.
     * </pre>
     */
    com.google.protobuf.ByteString
        getBitcoinNetworkBytes();
  }
  /**
   * Protobuf type {@code net.plan99.payfile.QueryFiles}
   */
  public static final class QueryFiles extends
      com.google.protobuf.GeneratedMessage
      implements QueryFilesOrBuilder {
    // Use QueryFiles.newBuilder() to construct.
    private QueryFiles(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private QueryFiles(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final QueryFiles defaultInstance;
    public static QueryFiles getDefaultInstance() {
      return defaultInstance;
    }

    public QueryFiles getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private QueryFiles(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              userAgent_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              bitcoinNetwork_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_QueryFiles_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_QueryFiles_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.plan99.payfile.Payfile.QueryFiles.class, net.plan99.payfile.Payfile.QueryFiles.Builder.class);
    }

    public static com.google.protobuf.Parser<QueryFiles> PARSER =
        new com.google.protobuf.AbstractParser<QueryFiles>() {
      public QueryFiles parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new QueryFiles(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<QueryFiles> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string user_agent = 1;
    public static final int USER_AGENT_FIELD_NUMBER = 1;
    private java.lang.Object userAgent_;
    /**
     * <code>required string user_agent = 1;</code>
     *
     * <pre>
     * The program that's gonna do the downloading.
     * </pre>
     */
    public boolean hasUserAgent() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string user_agent = 1;</code>
     *
     * <pre>
     * The program that's gonna do the downloading.
     * </pre>
     */
    public java.lang.String getUserAgent() {
      java.lang.Object ref = userAgent_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userAgent_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string user_agent = 1;</code>
     *
     * <pre>
     * The program that's gonna do the downloading.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUserAgentBytes() {
      java.lang.Object ref = userAgent_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userAgent_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string bitcoin_network = 2;
    public static final int BITCOIN_NETWORK_FIELD_NUMBER = 2;
    private java.lang.Object bitcoinNetwork_;
    /**
     * <code>required string bitcoin_network = 2;</code>
     *
     * <pre>
     * Verify up-front that we're on the same Bitcoin network (main, test, regtest, litecoin, etc).
     * If this doesn't match the server network we'll get an ERROR after QUERY_FILES.
     * </pre>
     */
    public boolean hasBitcoinNetwork() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string bitcoin_network = 2;</code>
     *
     * <pre>
     * Verify up-front that we're on the same Bitcoin network (main, test, regtest, litecoin, etc).
     * If this doesn't match the server network we'll get an ERROR after QUERY_FILES.
     * </pre>
     */
    public java.lang.String getBitcoinNetwork() {
      java.lang.Object ref = bitcoinNetwork_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          bitcoinNetwork_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string bitcoin_network = 2;</code>
     *
     * <pre>
     * Verify up-front that we're on the same Bitcoin network (main, test, regtest, litecoin, etc).
     * If this doesn't match the server network we'll get an ERROR after QUERY_FILES.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getBitcoinNetworkBytes() {
      java.lang.Object ref = bitcoinNetwork_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        bitcoinNetwork_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      userAgent_ = "";
      bitcoinNetwork_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasUserAgent()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBitcoinNetwork()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getUserAgentBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getBitcoinNetworkBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getUserAgentBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getBitcoinNetworkBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.plan99.payfile.Payfile.QueryFiles parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.plan99.payfile.Payfile.QueryFiles parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.plan99.payfile.Payfile.QueryFiles parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.plan99.payfile.Payfile.QueryFiles parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.plan99.payfile.Payfile.QueryFiles parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.plan99.payfile.Payfile.QueryFiles parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.plan99.payfile.Payfile.QueryFiles parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.plan99.payfile.Payfile.QueryFiles parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.plan99.payfile.Payfile.QueryFiles parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.plan99.payfile.Payfile.QueryFiles parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.plan99.payfile.Payfile.QueryFiles prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code net.plan99.payfile.QueryFiles}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.plan99.payfile.Payfile.QueryFilesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_QueryFiles_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_QueryFiles_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.plan99.payfile.Payfile.QueryFiles.class, net.plan99.payfile.Payfile.QueryFiles.Builder.class);
      }

      // Construct using net.plan99.payfile.Payfile.QueryFiles.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userAgent_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        bitcoinNetwork_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_QueryFiles_descriptor;
      }

      public net.plan99.payfile.Payfile.QueryFiles getDefaultInstanceForType() {
        return net.plan99.payfile.Payfile.QueryFiles.getDefaultInstance();
      }

      public net.plan99.payfile.Payfile.QueryFiles build() {
        net.plan99.payfile.Payfile.QueryFiles result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.plan99.payfile.Payfile.QueryFiles buildPartial() {
        net.plan99.payfile.Payfile.QueryFiles result = new net.plan99.payfile.Payfile.QueryFiles(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userAgent_ = userAgent_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bitcoinNetwork_ = bitcoinNetwork_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.plan99.payfile.Payfile.QueryFiles) {
          return mergeFrom((net.plan99.payfile.Payfile.QueryFiles)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.plan99.payfile.Payfile.QueryFiles other) {
        if (other == net.plan99.payfile.Payfile.QueryFiles.getDefaultInstance()) return this;
        if (other.hasUserAgent()) {
          bitField0_ |= 0x00000001;
          userAgent_ = other.userAgent_;
          onChanged();
        }
        if (other.hasBitcoinNetwork()) {
          bitField0_ |= 0x00000002;
          bitcoinNetwork_ = other.bitcoinNetwork_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUserAgent()) {
          
          return false;
        }
        if (!hasBitcoinNetwork()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.plan99.payfile.Payfile.QueryFiles parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.plan99.payfile.Payfile.QueryFiles) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string user_agent = 1;
      private java.lang.Object userAgent_ = "";
      /**
       * <code>required string user_agent = 1;</code>
       *
       * <pre>
       * The program that's gonna do the downloading.
       * </pre>
       */
      public boolean hasUserAgent() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string user_agent = 1;</code>
       *
       * <pre>
       * The program that's gonna do the downloading.
       * </pre>
       */
      public java.lang.String getUserAgent() {
        java.lang.Object ref = userAgent_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          userAgent_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string user_agent = 1;</code>
       *
       * <pre>
       * The program that's gonna do the downloading.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUserAgentBytes() {
        java.lang.Object ref = userAgent_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userAgent_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string user_agent = 1;</code>
       *
       * <pre>
       * The program that's gonna do the downloading.
       * </pre>
       */
      public Builder setUserAgent(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userAgent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string user_agent = 1;</code>
       *
       * <pre>
       * The program that's gonna do the downloading.
       * </pre>
       */
      public Builder clearUserAgent() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userAgent_ = getDefaultInstance().getUserAgent();
        onChanged();
        return this;
      }
      /**
       * <code>required string user_agent = 1;</code>
       *
       * <pre>
       * The program that's gonna do the downloading.
       * </pre>
       */
      public Builder setUserAgentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userAgent_ = value;
        onChanged();
        return this;
      }

      // required string bitcoin_network = 2;
      private java.lang.Object bitcoinNetwork_ = "";
      /**
       * <code>required string bitcoin_network = 2;</code>
       *
       * <pre>
       * Verify up-front that we're on the same Bitcoin network (main, test, regtest, litecoin, etc).
       * If this doesn't match the server network we'll get an ERROR after QUERY_FILES.
       * </pre>
       */
      public boolean hasBitcoinNetwork() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string bitcoin_network = 2;</code>
       *
       * <pre>
       * Verify up-front that we're on the same Bitcoin network (main, test, regtest, litecoin, etc).
       * If this doesn't match the server network we'll get an ERROR after QUERY_FILES.
       * </pre>
       */
      public java.lang.String getBitcoinNetwork() {
        java.lang.Object ref = bitcoinNetwork_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          bitcoinNetwork_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string bitcoin_network = 2;</code>
       *
       * <pre>
       * Verify up-front that we're on the same Bitcoin network (main, test, regtest, litecoin, etc).
       * If this doesn't match the server network we'll get an ERROR after QUERY_FILES.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getBitcoinNetworkBytes() {
        java.lang.Object ref = bitcoinNetwork_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          bitcoinNetwork_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string bitcoin_network = 2;</code>
       *
       * <pre>
       * Verify up-front that we're on the same Bitcoin network (main, test, regtest, litecoin, etc).
       * If this doesn't match the server network we'll get an ERROR after QUERY_FILES.
       * </pre>
       */
      public Builder setBitcoinNetwork(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        bitcoinNetwork_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string bitcoin_network = 2;</code>
       *
       * <pre>
       * Verify up-front that we're on the same Bitcoin network (main, test, regtest, litecoin, etc).
       * If this doesn't match the server network we'll get an ERROR after QUERY_FILES.
       * </pre>
       */
      public Builder clearBitcoinNetwork() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bitcoinNetwork_ = getDefaultInstance().getBitcoinNetwork();
        onChanged();
        return this;
      }
      /**
       * <code>required string bitcoin_network = 2;</code>
       *
       * <pre>
       * Verify up-front that we're on the same Bitcoin network (main, test, regtest, litecoin, etc).
       * If this doesn't match the server network we'll get an ERROR after QUERY_FILES.
       * </pre>
       */
      public Builder setBitcoinNetworkBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        bitcoinNetwork_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:net.plan99.payfile.QueryFiles)
    }

    static {
      defaultInstance = new QueryFiles(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:net.plan99.payfile.QueryFiles)
  }

  public interface FileOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string file_name = 1;
    /**
     * <code>required string file_name = 1;</code>
     *
     * <pre>
     * A unique file name.
     * </pre>
     */
    boolean hasFileName();
    /**
     * <code>required string file_name = 1;</code>
     *
     * <pre>
     * A unique file name.
     * </pre>
     */
    java.lang.String getFileName();
    /**
     * <code>required string file_name = 1;</code>
     *
     * <pre>
     * A unique file name.
     * </pre>
     */
    com.google.protobuf.ByteString
        getFileNameBytes();

    // required int64 size = 2;
    /**
     * <code>required int64 size = 2;</code>
     *
     * <pre>
     * In bytes.
     * </pre>
     */
    boolean hasSize();
    /**
     * <code>required int64 size = 2;</code>
     *
     * <pre>
     * In bytes.
     * </pre>
     */
    long getSize();

    // optional string description = 3;
    /**
     * <code>optional string description = 3;</code>
     */
    boolean hasDescription();
    /**
     * <code>optional string description = 3;</code>
     */
    java.lang.String getDescription();
    /**
     * <code>optional string description = 3;</code>
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    // required int32 price_per_chunk = 4;
    /**
     * <code>required int32 price_per_chunk = 4;</code>
     *
     * <pre>
     * Satoshis per chunk charged for this file.
     * </pre>
     */
    boolean hasPricePerChunk();
    /**
     * <code>required int32 price_per_chunk = 4;</code>
     *
     * <pre>
     * Satoshis per chunk charged for this file.
     * </pre>
     */
    int getPricePerChunk();

    // required int32 handle = 5;
    /**
     * <code>required int32 handle = 5;</code>
     *
     * <pre>
     * Number that will be used to refer to this file later.
     * </pre>
     */
    boolean hasHandle();
    /**
     * <code>required int32 handle = 5;</code>
     *
     * <pre>
     * Number that will be used to refer to this file later.
     * </pre>
     */
    int getHandle();
  }
  /**
   * Protobuf type {@code net.plan99.payfile.File}
   */
  public static final class File extends
      com.google.protobuf.GeneratedMessage
      implements FileOrBuilder {
    // Use File.newBuilder() to construct.
    private File(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private File(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final File defaultInstance;
    public static File getDefaultInstance() {
      return defaultInstance;
    }

    public File getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private File(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              fileName_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              size_ = input.readInt64();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              description_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              pricePerChunk_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              handle_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_File_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_File_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.plan99.payfile.Payfile.File.class, net.plan99.payfile.Payfile.File.Builder.class);
    }

    public static com.google.protobuf.Parser<File> PARSER =
        new com.google.protobuf.AbstractParser<File>() {
      public File parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new File(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<File> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string file_name = 1;
    public static final int FILE_NAME_FIELD_NUMBER = 1;
    private java.lang.Object fileName_;
    /**
     * <code>required string file_name = 1;</code>
     *
     * <pre>
     * A unique file name.
     * </pre>
     */
    public boolean hasFileName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string file_name = 1;</code>
     *
     * <pre>
     * A unique file name.
     * </pre>
     */
    public java.lang.String getFileName() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fileName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string file_name = 1;</code>
     *
     * <pre>
     * A unique file name.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFileNameBytes() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int64 size = 2;
    public static final int SIZE_FIELD_NUMBER = 2;
    private long size_;
    /**
     * <code>required int64 size = 2;</code>
     *
     * <pre>
     * In bytes.
     * </pre>
     */
    public boolean hasSize() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 size = 2;</code>
     *
     * <pre>
     * In bytes.
     * </pre>
     */
    public long getSize() {
      return size_;
    }

    // optional string description = 3;
    public static final int DESCRIPTION_FIELD_NUMBER = 3;
    private java.lang.Object description_;
    /**
     * <code>optional string description = 3;</code>
     */
    public boolean hasDescription() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string description = 3;</code>
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          description_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string description = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 price_per_chunk = 4;
    public static final int PRICE_PER_CHUNK_FIELD_NUMBER = 4;
    private int pricePerChunk_;
    /**
     * <code>required int32 price_per_chunk = 4;</code>
     *
     * <pre>
     * Satoshis per chunk charged for this file.
     * </pre>
     */
    public boolean hasPricePerChunk() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 price_per_chunk = 4;</code>
     *
     * <pre>
     * Satoshis per chunk charged for this file.
     * </pre>
     */
    public int getPricePerChunk() {
      return pricePerChunk_;
    }

    // required int32 handle = 5;
    public static final int HANDLE_FIELD_NUMBER = 5;
    private int handle_;
    /**
     * <code>required int32 handle = 5;</code>
     *
     * <pre>
     * Number that will be used to refer to this file later.
     * </pre>
     */
    public boolean hasHandle() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 handle = 5;</code>
     *
     * <pre>
     * Number that will be used to refer to this file later.
     * </pre>
     */
    public int getHandle() {
      return handle_;
    }

    private void initFields() {
      fileName_ = "";
      size_ = 0L;
      description_ = "";
      pricePerChunk_ = 0;
      handle_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasFileName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPricePerChunk()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHandle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getFileNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, size_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getDescriptionBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, pricePerChunk_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, handle_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getFileNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, size_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getDescriptionBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, pricePerChunk_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, handle_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.plan99.payfile.Payfile.File parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.plan99.payfile.Payfile.File parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.plan99.payfile.Payfile.File parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.plan99.payfile.Payfile.File parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.plan99.payfile.Payfile.File parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.plan99.payfile.Payfile.File parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.plan99.payfile.Payfile.File parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.plan99.payfile.Payfile.File parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.plan99.payfile.Payfile.File parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.plan99.payfile.Payfile.File parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.plan99.payfile.Payfile.File prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code net.plan99.payfile.File}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.plan99.payfile.Payfile.FileOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_File_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_File_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.plan99.payfile.Payfile.File.class, net.plan99.payfile.Payfile.File.Builder.class);
      }

      // Construct using net.plan99.payfile.Payfile.File.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fileName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        size_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        description_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        pricePerChunk_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        handle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_File_descriptor;
      }

      public net.plan99.payfile.Payfile.File getDefaultInstanceForType() {
        return net.plan99.payfile.Payfile.File.getDefaultInstance();
      }

      public net.plan99.payfile.Payfile.File build() {
        net.plan99.payfile.Payfile.File result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.plan99.payfile.Payfile.File buildPartial() {
        net.plan99.payfile.Payfile.File result = new net.plan99.payfile.Payfile.File(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fileName_ = fileName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.description_ = description_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.pricePerChunk_ = pricePerChunk_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.handle_ = handle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.plan99.payfile.Payfile.File) {
          return mergeFrom((net.plan99.payfile.Payfile.File)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.plan99.payfile.Payfile.File other) {
        if (other == net.plan99.payfile.Payfile.File.getDefaultInstance()) return this;
        if (other.hasFileName()) {
          bitField0_ |= 0x00000001;
          fileName_ = other.fileName_;
          onChanged();
        }
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasDescription()) {
          bitField0_ |= 0x00000004;
          description_ = other.description_;
          onChanged();
        }
        if (other.hasPricePerChunk()) {
          setPricePerChunk(other.getPricePerChunk());
        }
        if (other.hasHandle()) {
          setHandle(other.getHandle());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFileName()) {
          
          return false;
        }
        if (!hasSize()) {
          
          return false;
        }
        if (!hasPricePerChunk()) {
          
          return false;
        }
        if (!hasHandle()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.plan99.payfile.Payfile.File parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.plan99.payfile.Payfile.File) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string file_name = 1;
      private java.lang.Object fileName_ = "";
      /**
       * <code>required string file_name = 1;</code>
       *
       * <pre>
       * A unique file name.
       * </pre>
       */
      public boolean hasFileName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string file_name = 1;</code>
       *
       * <pre>
       * A unique file name.
       * </pre>
       */
      public java.lang.String getFileName() {
        java.lang.Object ref = fileName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          fileName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string file_name = 1;</code>
       *
       * <pre>
       * A unique file name.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFileNameBytes() {
        java.lang.Object ref = fileName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fileName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string file_name = 1;</code>
       *
       * <pre>
       * A unique file name.
       * </pre>
       */
      public Builder setFileName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        fileName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string file_name = 1;</code>
       *
       * <pre>
       * A unique file name.
       * </pre>
       */
      public Builder clearFileName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fileName_ = getDefaultInstance().getFileName();
        onChanged();
        return this;
      }
      /**
       * <code>required string file_name = 1;</code>
       *
       * <pre>
       * A unique file name.
       * </pre>
       */
      public Builder setFileNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        fileName_ = value;
        onChanged();
        return this;
      }

      // required int64 size = 2;
      private long size_ ;
      /**
       * <code>required int64 size = 2;</code>
       *
       * <pre>
       * In bytes.
       * </pre>
       */
      public boolean hasSize() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 size = 2;</code>
       *
       * <pre>
       * In bytes.
       * </pre>
       */
      public long getSize() {
        return size_;
      }
      /**
       * <code>required int64 size = 2;</code>
       *
       * <pre>
       * In bytes.
       * </pre>
       */
      public Builder setSize(long value) {
        bitField0_ |= 0x00000002;
        size_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 size = 2;</code>
       *
       * <pre>
       * In bytes.
       * </pre>
       */
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000002);
        size_ = 0L;
        onChanged();
        return this;
      }

      // optional string description = 3;
      private java.lang.Object description_ = "";
      /**
       * <code>optional string description = 3;</code>
       */
      public boolean hasDescription() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string description = 3;</code>
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string description = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string description = 3;</code>
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string description = 3;</code>
       */
      public Builder clearDescription() {
        bitField0_ = (bitField0_ & ~0x00000004);
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <code>optional string description = 3;</code>
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        description_ = value;
        onChanged();
        return this;
      }

      // required int32 price_per_chunk = 4;
      private int pricePerChunk_ ;
      /**
       * <code>required int32 price_per_chunk = 4;</code>
       *
       * <pre>
       * Satoshis per chunk charged for this file.
       * </pre>
       */
      public boolean hasPricePerChunk() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 price_per_chunk = 4;</code>
       *
       * <pre>
       * Satoshis per chunk charged for this file.
       * </pre>
       */
      public int getPricePerChunk() {
        return pricePerChunk_;
      }
      /**
       * <code>required int32 price_per_chunk = 4;</code>
       *
       * <pre>
       * Satoshis per chunk charged for this file.
       * </pre>
       */
      public Builder setPricePerChunk(int value) {
        bitField0_ |= 0x00000008;
        pricePerChunk_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 price_per_chunk = 4;</code>
       *
       * <pre>
       * Satoshis per chunk charged for this file.
       * </pre>
       */
      public Builder clearPricePerChunk() {
        bitField0_ = (bitField0_ & ~0x00000008);
        pricePerChunk_ = 0;
        onChanged();
        return this;
      }

      // required int32 handle = 5;
      private int handle_ ;
      /**
       * <code>required int32 handle = 5;</code>
       *
       * <pre>
       * Number that will be used to refer to this file later.
       * </pre>
       */
      public boolean hasHandle() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 handle = 5;</code>
       *
       * <pre>
       * Number that will be used to refer to this file later.
       * </pre>
       */
      public int getHandle() {
        return handle_;
      }
      /**
       * <code>required int32 handle = 5;</code>
       *
       * <pre>
       * Number that will be used to refer to this file later.
       * </pre>
       */
      public Builder setHandle(int value) {
        bitField0_ |= 0x00000010;
        handle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 handle = 5;</code>
       *
       * <pre>
       * Number that will be used to refer to this file later.
       * </pre>
       */
      public Builder clearHandle() {
        bitField0_ = (bitField0_ & ~0x00000010);
        handle_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:net.plan99.payfile.File)
    }

    static {
      defaultInstance = new File(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:net.plan99.payfile.File)
  }

  public interface ManifestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .net.plan99.payfile.File files = 1;
    /**
     * <code>repeated .net.plan99.payfile.File files = 1;</code>
     */
    java.util.List<net.plan99.payfile.Payfile.File> 
        getFilesList();
    /**
     * <code>repeated .net.plan99.payfile.File files = 1;</code>
     */
    net.plan99.payfile.Payfile.File getFiles(int index);
    /**
     * <code>repeated .net.plan99.payfile.File files = 1;</code>
     */
    int getFilesCount();
    /**
     * <code>repeated .net.plan99.payfile.File files = 1;</code>
     */
    java.util.List<? extends net.plan99.payfile.Payfile.FileOrBuilder> 
        getFilesOrBuilderList();
    /**
     * <code>repeated .net.plan99.payfile.File files = 1;</code>
     */
    net.plan99.payfile.Payfile.FileOrBuilder getFilesOrBuilder(
        int index);

    // required int32 chunk_size = 2;
    /**
     * <code>required int32 chunk_size = 2;</code>
     *
     * <pre>
     * Usually 1kb.
     * </pre>
     */
    boolean hasChunkSize();
    /**
     * <code>required int32 chunk_size = 2;</code>
     *
     * <pre>
     * Usually 1kb.
     * </pre>
     */
    int getChunkSize();
  }
  /**
   * Protobuf type {@code net.plan99.payfile.Manifest}
   */
  public static final class Manifest extends
      com.google.protobuf.GeneratedMessage
      implements ManifestOrBuilder {
    // Use Manifest.newBuilder() to construct.
    private Manifest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Manifest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Manifest defaultInstance;
    public static Manifest getDefaultInstance() {
      return defaultInstance;
    }

    public Manifest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Manifest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                files_ = new java.util.ArrayList<net.plan99.payfile.Payfile.File>();
                mutable_bitField0_ |= 0x00000001;
              }
              files_.add(input.readMessage(net.plan99.payfile.Payfile.File.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              chunkSize_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          files_ = java.util.Collections.unmodifiableList(files_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_Manifest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_Manifest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.plan99.payfile.Payfile.Manifest.class, net.plan99.payfile.Payfile.Manifest.Builder.class);
    }

    public static com.google.protobuf.Parser<Manifest> PARSER =
        new com.google.protobuf.AbstractParser<Manifest>() {
      public Manifest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Manifest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Manifest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .net.plan99.payfile.File files = 1;
    public static final int FILES_FIELD_NUMBER = 1;
    private java.util.List<net.plan99.payfile.Payfile.File> files_;
    /**
     * <code>repeated .net.plan99.payfile.File files = 1;</code>
     */
    public java.util.List<net.plan99.payfile.Payfile.File> getFilesList() {
      return files_;
    }
    /**
     * <code>repeated .net.plan99.payfile.File files = 1;</code>
     */
    public java.util.List<? extends net.plan99.payfile.Payfile.FileOrBuilder> 
        getFilesOrBuilderList() {
      return files_;
    }
    /**
     * <code>repeated .net.plan99.payfile.File files = 1;</code>
     */
    public int getFilesCount() {
      return files_.size();
    }
    /**
     * <code>repeated .net.plan99.payfile.File files = 1;</code>
     */
    public net.plan99.payfile.Payfile.File getFiles(int index) {
      return files_.get(index);
    }
    /**
     * <code>repeated .net.plan99.payfile.File files = 1;</code>
     */
    public net.plan99.payfile.Payfile.FileOrBuilder getFilesOrBuilder(
        int index) {
      return files_.get(index);
    }

    // required int32 chunk_size = 2;
    public static final int CHUNK_SIZE_FIELD_NUMBER = 2;
    private int chunkSize_;
    /**
     * <code>required int32 chunk_size = 2;</code>
     *
     * <pre>
     * Usually 1kb.
     * </pre>
     */
    public boolean hasChunkSize() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 chunk_size = 2;</code>
     *
     * <pre>
     * Usually 1kb.
     * </pre>
     */
    public int getChunkSize() {
      return chunkSize_;
    }

    private void initFields() {
      files_ = java.util.Collections.emptyList();
      chunkSize_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasChunkSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFilesCount(); i++) {
        if (!getFiles(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < files_.size(); i++) {
        output.writeMessage(1, files_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, chunkSize_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < files_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, files_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, chunkSize_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.plan99.payfile.Payfile.Manifest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.plan99.payfile.Payfile.Manifest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.plan99.payfile.Payfile.Manifest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.plan99.payfile.Payfile.Manifest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.plan99.payfile.Payfile.Manifest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.plan99.payfile.Payfile.Manifest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.plan99.payfile.Payfile.Manifest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.plan99.payfile.Payfile.Manifest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.plan99.payfile.Payfile.Manifest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.plan99.payfile.Payfile.Manifest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.plan99.payfile.Payfile.Manifest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code net.plan99.payfile.Manifest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.plan99.payfile.Payfile.ManifestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_Manifest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_Manifest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.plan99.payfile.Payfile.Manifest.class, net.plan99.payfile.Payfile.Manifest.Builder.class);
      }

      // Construct using net.plan99.payfile.Payfile.Manifest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFilesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (filesBuilder_ == null) {
          files_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          filesBuilder_.clear();
        }
        chunkSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_Manifest_descriptor;
      }

      public net.plan99.payfile.Payfile.Manifest getDefaultInstanceForType() {
        return net.plan99.payfile.Payfile.Manifest.getDefaultInstance();
      }

      public net.plan99.payfile.Payfile.Manifest build() {
        net.plan99.payfile.Payfile.Manifest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.plan99.payfile.Payfile.Manifest buildPartial() {
        net.plan99.payfile.Payfile.Manifest result = new net.plan99.payfile.Payfile.Manifest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (filesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            files_ = java.util.Collections.unmodifiableList(files_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.files_ = files_;
        } else {
          result.files_ = filesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.chunkSize_ = chunkSize_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.plan99.payfile.Payfile.Manifest) {
          return mergeFrom((net.plan99.payfile.Payfile.Manifest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.plan99.payfile.Payfile.Manifest other) {
        if (other == net.plan99.payfile.Payfile.Manifest.getDefaultInstance()) return this;
        if (filesBuilder_ == null) {
          if (!other.files_.isEmpty()) {
            if (files_.isEmpty()) {
              files_ = other.files_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFilesIsMutable();
              files_.addAll(other.files_);
            }
            onChanged();
          }
        } else {
          if (!other.files_.isEmpty()) {
            if (filesBuilder_.isEmpty()) {
              filesBuilder_.dispose();
              filesBuilder_ = null;
              files_ = other.files_;
              bitField0_ = (bitField0_ & ~0x00000001);
              filesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFilesFieldBuilder() : null;
            } else {
              filesBuilder_.addAllMessages(other.files_);
            }
          }
        }
        if (other.hasChunkSize()) {
          setChunkSize(other.getChunkSize());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasChunkSize()) {
          
          return false;
        }
        for (int i = 0; i < getFilesCount(); i++) {
          if (!getFiles(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.plan99.payfile.Payfile.Manifest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.plan99.payfile.Payfile.Manifest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .net.plan99.payfile.File files = 1;
      private java.util.List<net.plan99.payfile.Payfile.File> files_ =
        java.util.Collections.emptyList();
      private void ensureFilesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          files_ = new java.util.ArrayList<net.plan99.payfile.Payfile.File>(files_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          net.plan99.payfile.Payfile.File, net.plan99.payfile.Payfile.File.Builder, net.plan99.payfile.Payfile.FileOrBuilder> filesBuilder_;

      /**
       * <code>repeated .net.plan99.payfile.File files = 1;</code>
       */
      public java.util.List<net.plan99.payfile.Payfile.File> getFilesList() {
        if (filesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(files_);
        } else {
          return filesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .net.plan99.payfile.File files = 1;</code>
       */
      public int getFilesCount() {
        if (filesBuilder_ == null) {
          return files_.size();
        } else {
          return filesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .net.plan99.payfile.File files = 1;</code>
       */
      public net.plan99.payfile.Payfile.File getFiles(int index) {
        if (filesBuilder_ == null) {
          return files_.get(index);
        } else {
          return filesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .net.plan99.payfile.File files = 1;</code>
       */
      public Builder setFiles(
          int index, net.plan99.payfile.Payfile.File value) {
        if (filesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFilesIsMutable();
          files_.set(index, value);
          onChanged();
        } else {
          filesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .net.plan99.payfile.File files = 1;</code>
       */
      public Builder setFiles(
          int index, net.plan99.payfile.Payfile.File.Builder builderForValue) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          files_.set(index, builderForValue.build());
          onChanged();
        } else {
          filesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .net.plan99.payfile.File files = 1;</code>
       */
      public Builder addFiles(net.plan99.payfile.Payfile.File value) {
        if (filesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFilesIsMutable();
          files_.add(value);
          onChanged();
        } else {
          filesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .net.plan99.payfile.File files = 1;</code>
       */
      public Builder addFiles(
          int index, net.plan99.payfile.Payfile.File value) {
        if (filesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFilesIsMutable();
          files_.add(index, value);
          onChanged();
        } else {
          filesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .net.plan99.payfile.File files = 1;</code>
       */
      public Builder addFiles(
          net.plan99.payfile.Payfile.File.Builder builderForValue) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          files_.add(builderForValue.build());
          onChanged();
        } else {
          filesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .net.plan99.payfile.File files = 1;</code>
       */
      public Builder addFiles(
          int index, net.plan99.payfile.Payfile.File.Builder builderForValue) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          files_.add(index, builderForValue.build());
          onChanged();
        } else {
          filesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .net.plan99.payfile.File files = 1;</code>
       */
      public Builder addAllFiles(
          java.lang.Iterable<? extends net.plan99.payfile.Payfile.File> values) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          super.addAll(values, files_);
          onChanged();
        } else {
          filesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .net.plan99.payfile.File files = 1;</code>
       */
      public Builder clearFiles() {
        if (filesBuilder_ == null) {
          files_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          filesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .net.plan99.payfile.File files = 1;</code>
       */
      public Builder removeFiles(int index) {
        if (filesBuilder_ == null) {
          ensureFilesIsMutable();
          files_.remove(index);
          onChanged();
        } else {
          filesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .net.plan99.payfile.File files = 1;</code>
       */
      public net.plan99.payfile.Payfile.File.Builder getFilesBuilder(
          int index) {
        return getFilesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .net.plan99.payfile.File files = 1;</code>
       */
      public net.plan99.payfile.Payfile.FileOrBuilder getFilesOrBuilder(
          int index) {
        if (filesBuilder_ == null) {
          return files_.get(index);  } else {
          return filesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .net.plan99.payfile.File files = 1;</code>
       */
      public java.util.List<? extends net.plan99.payfile.Payfile.FileOrBuilder> 
           getFilesOrBuilderList() {
        if (filesBuilder_ != null) {
          return filesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(files_);
        }
      }
      /**
       * <code>repeated .net.plan99.payfile.File files = 1;</code>
       */
      public net.plan99.payfile.Payfile.File.Builder addFilesBuilder() {
        return getFilesFieldBuilder().addBuilder(
            net.plan99.payfile.Payfile.File.getDefaultInstance());
      }
      /**
       * <code>repeated .net.plan99.payfile.File files = 1;</code>
       */
      public net.plan99.payfile.Payfile.File.Builder addFilesBuilder(
          int index) {
        return getFilesFieldBuilder().addBuilder(
            index, net.plan99.payfile.Payfile.File.getDefaultInstance());
      }
      /**
       * <code>repeated .net.plan99.payfile.File files = 1;</code>
       */
      public java.util.List<net.plan99.payfile.Payfile.File.Builder> 
           getFilesBuilderList() {
        return getFilesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          net.plan99.payfile.Payfile.File, net.plan99.payfile.Payfile.File.Builder, net.plan99.payfile.Payfile.FileOrBuilder> 
          getFilesFieldBuilder() {
        if (filesBuilder_ == null) {
          filesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              net.plan99.payfile.Payfile.File, net.plan99.payfile.Payfile.File.Builder, net.plan99.payfile.Payfile.FileOrBuilder>(
                  files_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          files_ = null;
        }
        return filesBuilder_;
      }

      // required int32 chunk_size = 2;
      private int chunkSize_ ;
      /**
       * <code>required int32 chunk_size = 2;</code>
       *
       * <pre>
       * Usually 1kb.
       * </pre>
       */
      public boolean hasChunkSize() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 chunk_size = 2;</code>
       *
       * <pre>
       * Usually 1kb.
       * </pre>
       */
      public int getChunkSize() {
        return chunkSize_;
      }
      /**
       * <code>required int32 chunk_size = 2;</code>
       *
       * <pre>
       * Usually 1kb.
       * </pre>
       */
      public Builder setChunkSize(int value) {
        bitField0_ |= 0x00000002;
        chunkSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 chunk_size = 2;</code>
       *
       * <pre>
       * Usually 1kb.
       * </pre>
       */
      public Builder clearChunkSize() {
        bitField0_ = (bitField0_ & ~0x00000002);
        chunkSize_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:net.plan99.payfile.Manifest)
    }

    static {
      defaultInstance = new Manifest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:net.plan99.payfile.Manifest)
  }

  public interface DownloadChunkOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 handle = 1;
    /**
     * <code>required int32 handle = 1;</code>
     *
     * <pre>
     * File handle we're downloading.
     * </pre>
     */
    boolean hasHandle();
    /**
     * <code>required int32 handle = 1;</code>
     *
     * <pre>
     * File handle we're downloading.
     * </pre>
     */
    int getHandle();

    // required int64 chunk_id = 2;
    /**
     * <code>required int64 chunk_id = 2;</code>
     *
     * <pre>
     * Offset into the file in terms of chunks.
     * </pre>
     */
    boolean hasChunkId();
    /**
     * <code>required int64 chunk_id = 2;</code>
     *
     * <pre>
     * Offset into the file in terms of chunks.
     * </pre>
     */
    long getChunkId();

    // optional int32 num_chunks = 3 [default = 1];
    /**
     * <code>optional int32 num_chunks = 3 [default = 1];</code>
     *
     * <pre>
     * Number of chunks to download at once.
     * </pre>
     */
    boolean hasNumChunks();
    /**
     * <code>optional int32 num_chunks = 3 [default = 1];</code>
     *
     * <pre>
     * Number of chunks to download at once.
     * </pre>
     */
    int getNumChunks();
  }
  /**
   * Protobuf type {@code net.plan99.payfile.DownloadChunk}
   */
  public static final class DownloadChunk extends
      com.google.protobuf.GeneratedMessage
      implements DownloadChunkOrBuilder {
    // Use DownloadChunk.newBuilder() to construct.
    private DownloadChunk(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DownloadChunk(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DownloadChunk defaultInstance;
    public static DownloadChunk getDefaultInstance() {
      return defaultInstance;
    }

    public DownloadChunk getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DownloadChunk(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              handle_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              chunkId_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              numChunks_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_DownloadChunk_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_DownloadChunk_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.plan99.payfile.Payfile.DownloadChunk.class, net.plan99.payfile.Payfile.DownloadChunk.Builder.class);
    }

    public static com.google.protobuf.Parser<DownloadChunk> PARSER =
        new com.google.protobuf.AbstractParser<DownloadChunk>() {
      public DownloadChunk parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DownloadChunk(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DownloadChunk> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 handle = 1;
    public static final int HANDLE_FIELD_NUMBER = 1;
    private int handle_;
    /**
     * <code>required int32 handle = 1;</code>
     *
     * <pre>
     * File handle we're downloading.
     * </pre>
     */
    public boolean hasHandle() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 handle = 1;</code>
     *
     * <pre>
     * File handle we're downloading.
     * </pre>
     */
    public int getHandle() {
      return handle_;
    }

    // required int64 chunk_id = 2;
    public static final int CHUNK_ID_FIELD_NUMBER = 2;
    private long chunkId_;
    /**
     * <code>required int64 chunk_id = 2;</code>
     *
     * <pre>
     * Offset into the file in terms of chunks.
     * </pre>
     */
    public boolean hasChunkId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 chunk_id = 2;</code>
     *
     * <pre>
     * Offset into the file in terms of chunks.
     * </pre>
     */
    public long getChunkId() {
      return chunkId_;
    }

    // optional int32 num_chunks = 3 [default = 1];
    public static final int NUM_CHUNKS_FIELD_NUMBER = 3;
    private int numChunks_;
    /**
     * <code>optional int32 num_chunks = 3 [default = 1];</code>
     *
     * <pre>
     * Number of chunks to download at once.
     * </pre>
     */
    public boolean hasNumChunks() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 num_chunks = 3 [default = 1];</code>
     *
     * <pre>
     * Number of chunks to download at once.
     * </pre>
     */
    public int getNumChunks() {
      return numChunks_;
    }

    private void initFields() {
      handle_ = 0;
      chunkId_ = 0L;
      numChunks_ = 1;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasHandle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasChunkId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, handle_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, chunkId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, numChunks_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, handle_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, chunkId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, numChunks_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.plan99.payfile.Payfile.DownloadChunk parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.plan99.payfile.Payfile.DownloadChunk parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.plan99.payfile.Payfile.DownloadChunk parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.plan99.payfile.Payfile.DownloadChunk parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.plan99.payfile.Payfile.DownloadChunk parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.plan99.payfile.Payfile.DownloadChunk parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.plan99.payfile.Payfile.DownloadChunk parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.plan99.payfile.Payfile.DownloadChunk parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.plan99.payfile.Payfile.DownloadChunk parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.plan99.payfile.Payfile.DownloadChunk parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.plan99.payfile.Payfile.DownloadChunk prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code net.plan99.payfile.DownloadChunk}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.plan99.payfile.Payfile.DownloadChunkOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_DownloadChunk_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_DownloadChunk_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.plan99.payfile.Payfile.DownloadChunk.class, net.plan99.payfile.Payfile.DownloadChunk.Builder.class);
      }

      // Construct using net.plan99.payfile.Payfile.DownloadChunk.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        handle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        chunkId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        numChunks_ = 1;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_DownloadChunk_descriptor;
      }

      public net.plan99.payfile.Payfile.DownloadChunk getDefaultInstanceForType() {
        return net.plan99.payfile.Payfile.DownloadChunk.getDefaultInstance();
      }

      public net.plan99.payfile.Payfile.DownloadChunk build() {
        net.plan99.payfile.Payfile.DownloadChunk result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.plan99.payfile.Payfile.DownloadChunk buildPartial() {
        net.plan99.payfile.Payfile.DownloadChunk result = new net.plan99.payfile.Payfile.DownloadChunk(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.handle_ = handle_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.chunkId_ = chunkId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.numChunks_ = numChunks_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.plan99.payfile.Payfile.DownloadChunk) {
          return mergeFrom((net.plan99.payfile.Payfile.DownloadChunk)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.plan99.payfile.Payfile.DownloadChunk other) {
        if (other == net.plan99.payfile.Payfile.DownloadChunk.getDefaultInstance()) return this;
        if (other.hasHandle()) {
          setHandle(other.getHandle());
        }
        if (other.hasChunkId()) {
          setChunkId(other.getChunkId());
        }
        if (other.hasNumChunks()) {
          setNumChunks(other.getNumChunks());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasHandle()) {
          
          return false;
        }
        if (!hasChunkId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.plan99.payfile.Payfile.DownloadChunk parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.plan99.payfile.Payfile.DownloadChunk) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 handle = 1;
      private int handle_ ;
      /**
       * <code>required int32 handle = 1;</code>
       *
       * <pre>
       * File handle we're downloading.
       * </pre>
       */
      public boolean hasHandle() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 handle = 1;</code>
       *
       * <pre>
       * File handle we're downloading.
       * </pre>
       */
      public int getHandle() {
        return handle_;
      }
      /**
       * <code>required int32 handle = 1;</code>
       *
       * <pre>
       * File handle we're downloading.
       * </pre>
       */
      public Builder setHandle(int value) {
        bitField0_ |= 0x00000001;
        handle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 handle = 1;</code>
       *
       * <pre>
       * File handle we're downloading.
       * </pre>
       */
      public Builder clearHandle() {
        bitField0_ = (bitField0_ & ~0x00000001);
        handle_ = 0;
        onChanged();
        return this;
      }

      // required int64 chunk_id = 2;
      private long chunkId_ ;
      /**
       * <code>required int64 chunk_id = 2;</code>
       *
       * <pre>
       * Offset into the file in terms of chunks.
       * </pre>
       */
      public boolean hasChunkId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 chunk_id = 2;</code>
       *
       * <pre>
       * Offset into the file in terms of chunks.
       * </pre>
       */
      public long getChunkId() {
        return chunkId_;
      }
      /**
       * <code>required int64 chunk_id = 2;</code>
       *
       * <pre>
       * Offset into the file in terms of chunks.
       * </pre>
       */
      public Builder setChunkId(long value) {
        bitField0_ |= 0x00000002;
        chunkId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 chunk_id = 2;</code>
       *
       * <pre>
       * Offset into the file in terms of chunks.
       * </pre>
       */
      public Builder clearChunkId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        chunkId_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 num_chunks = 3 [default = 1];
      private int numChunks_ = 1;
      /**
       * <code>optional int32 num_chunks = 3 [default = 1];</code>
       *
       * <pre>
       * Number of chunks to download at once.
       * </pre>
       */
      public boolean hasNumChunks() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 num_chunks = 3 [default = 1];</code>
       *
       * <pre>
       * Number of chunks to download at once.
       * </pre>
       */
      public int getNumChunks() {
        return numChunks_;
      }
      /**
       * <code>optional int32 num_chunks = 3 [default = 1];</code>
       *
       * <pre>
       * Number of chunks to download at once.
       * </pre>
       */
      public Builder setNumChunks(int value) {
        bitField0_ |= 0x00000004;
        numChunks_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 num_chunks = 3 [default = 1];</code>
       *
       * <pre>
       * Number of chunks to download at once.
       * </pre>
       */
      public Builder clearNumChunks() {
        bitField0_ = (bitField0_ & ~0x00000004);
        numChunks_ = 1;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:net.plan99.payfile.DownloadChunk)
    }

    static {
      defaultInstance = new DownloadChunk(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:net.plan99.payfile.DownloadChunk)
  }

  public interface DataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 handle = 1;
    /**
     * <code>required int32 handle = 1;</code>
     */
    boolean hasHandle();
    /**
     * <code>required int32 handle = 1;</code>
     */
    int getHandle();

    // required int64 chunk_id = 2;
    /**
     * <code>required int64 chunk_id = 2;</code>
     */
    boolean hasChunkId();
    /**
     * <code>required int64 chunk_id = 2;</code>
     */
    long getChunkId();

    // required bytes data = 3;
    /**
     * <code>required bytes data = 3;</code>
     */
    boolean hasData();
    /**
     * <code>required bytes data = 3;</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code net.plan99.payfile.Data}
   */
  public static final class Data extends
      com.google.protobuf.GeneratedMessage
      implements DataOrBuilder {
    // Use Data.newBuilder() to construct.
    private Data(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Data(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Data defaultInstance;
    public static Data getDefaultInstance() {
      return defaultInstance;
    }

    public Data getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Data(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              handle_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              chunkId_ = input.readInt64();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              data_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_Data_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_Data_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.plan99.payfile.Payfile.Data.class, net.plan99.payfile.Payfile.Data.Builder.class);
    }

    public static com.google.protobuf.Parser<Data> PARSER =
        new com.google.protobuf.AbstractParser<Data>() {
      public Data parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Data(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Data> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 handle = 1;
    public static final int HANDLE_FIELD_NUMBER = 1;
    private int handle_;
    /**
     * <code>required int32 handle = 1;</code>
     */
    public boolean hasHandle() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 handle = 1;</code>
     */
    public int getHandle() {
      return handle_;
    }

    // required int64 chunk_id = 2;
    public static final int CHUNK_ID_FIELD_NUMBER = 2;
    private long chunkId_;
    /**
     * <code>required int64 chunk_id = 2;</code>
     */
    public boolean hasChunkId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 chunk_id = 2;</code>
     */
    public long getChunkId() {
      return chunkId_;
    }

    // required bytes data = 3;
    public static final int DATA_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>required bytes data = 3;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required bytes data = 3;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private void initFields() {
      handle_ = 0;
      chunkId_ = 0L;
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasHandle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasChunkId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, handle_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, chunkId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, data_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, handle_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, chunkId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, data_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.plan99.payfile.Payfile.Data parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.plan99.payfile.Payfile.Data parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.plan99.payfile.Payfile.Data parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.plan99.payfile.Payfile.Data parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.plan99.payfile.Payfile.Data parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.plan99.payfile.Payfile.Data parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.plan99.payfile.Payfile.Data parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.plan99.payfile.Payfile.Data parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.plan99.payfile.Payfile.Data parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.plan99.payfile.Payfile.Data parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.plan99.payfile.Payfile.Data prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code net.plan99.payfile.Data}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.plan99.payfile.Payfile.DataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_Data_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_Data_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.plan99.payfile.Payfile.Data.class, net.plan99.payfile.Payfile.Data.Builder.class);
      }

      // Construct using net.plan99.payfile.Payfile.Data.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        handle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        chunkId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_Data_descriptor;
      }

      public net.plan99.payfile.Payfile.Data getDefaultInstanceForType() {
        return net.plan99.payfile.Payfile.Data.getDefaultInstance();
      }

      public net.plan99.payfile.Payfile.Data build() {
        net.plan99.payfile.Payfile.Data result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.plan99.payfile.Payfile.Data buildPartial() {
        net.plan99.payfile.Payfile.Data result = new net.plan99.payfile.Payfile.Data(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.handle_ = handle_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.chunkId_ = chunkId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.data_ = data_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.plan99.payfile.Payfile.Data) {
          return mergeFrom((net.plan99.payfile.Payfile.Data)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.plan99.payfile.Payfile.Data other) {
        if (other == net.plan99.payfile.Payfile.Data.getDefaultInstance()) return this;
        if (other.hasHandle()) {
          setHandle(other.getHandle());
        }
        if (other.hasChunkId()) {
          setChunkId(other.getChunkId());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasHandle()) {
          
          return false;
        }
        if (!hasChunkId()) {
          
          return false;
        }
        if (!hasData()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.plan99.payfile.Payfile.Data parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.plan99.payfile.Payfile.Data) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 handle = 1;
      private int handle_ ;
      /**
       * <code>required int32 handle = 1;</code>
       */
      public boolean hasHandle() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 handle = 1;</code>
       */
      public int getHandle() {
        return handle_;
      }
      /**
       * <code>required int32 handle = 1;</code>
       */
      public Builder setHandle(int value) {
        bitField0_ |= 0x00000001;
        handle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 handle = 1;</code>
       */
      public Builder clearHandle() {
        bitField0_ = (bitField0_ & ~0x00000001);
        handle_ = 0;
        onChanged();
        return this;
      }

      // required int64 chunk_id = 2;
      private long chunkId_ ;
      /**
       * <code>required int64 chunk_id = 2;</code>
       */
      public boolean hasChunkId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 chunk_id = 2;</code>
       */
      public long getChunkId() {
        return chunkId_;
      }
      /**
       * <code>required int64 chunk_id = 2;</code>
       */
      public Builder setChunkId(long value) {
        bitField0_ |= 0x00000002;
        chunkId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 chunk_id = 2;</code>
       */
      public Builder clearChunkId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        chunkId_ = 0L;
        onChanged();
        return this;
      }

      // required bytes data = 3;
      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes data = 3;</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required bytes data = 3;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>required bytes data = 3;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes data = 3;</code>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000004);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:net.plan99.payfile.Data)
    }

    static {
      defaultInstance = new Data(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:net.plan99.payfile.Data)
  }

  public interface ErrorOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string code = 1;
    /**
     * <code>required string code = 1;</code>
     */
    boolean hasCode();
    /**
     * <code>required string code = 1;</code>
     */
    java.lang.String getCode();
    /**
     * <code>required string code = 1;</code>
     */
    com.google.protobuf.ByteString
        getCodeBytes();

    // optional string explanation = 2;
    /**
     * <code>optional string explanation = 2;</code>
     */
    boolean hasExplanation();
    /**
     * <code>optional string explanation = 2;</code>
     */
    java.lang.String getExplanation();
    /**
     * <code>optional string explanation = 2;</code>
     */
    com.google.protobuf.ByteString
        getExplanationBytes();
  }
  /**
   * Protobuf type {@code net.plan99.payfile.Error}
   */
  public static final class Error extends
      com.google.protobuf.GeneratedMessage
      implements ErrorOrBuilder {
    // Use Error.newBuilder() to construct.
    private Error(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Error(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Error defaultInstance;
    public static Error getDefaultInstance() {
      return defaultInstance;
    }

    public Error getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Error(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              code_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              explanation_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_Error_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_Error_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.plan99.payfile.Payfile.Error.class, net.plan99.payfile.Payfile.Error.Builder.class);
    }

    public static com.google.protobuf.Parser<Error> PARSER =
        new com.google.protobuf.AbstractParser<Error>() {
      public Error parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Error(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Error> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string code = 1;
    public static final int CODE_FIELD_NUMBER = 1;
    private java.lang.Object code_;
    /**
     * <code>required string code = 1;</code>
     */
    public boolean hasCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string code = 1;</code>
     */
    public java.lang.String getCode() {
      java.lang.Object ref = code_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          code_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string code = 1;</code>
     */
    public com.google.protobuf.ByteString
        getCodeBytes() {
      java.lang.Object ref = code_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        code_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string explanation = 2;
    public static final int EXPLANATION_FIELD_NUMBER = 2;
    private java.lang.Object explanation_;
    /**
     * <code>optional string explanation = 2;</code>
     */
    public boolean hasExplanation() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string explanation = 2;</code>
     */
    public java.lang.String getExplanation() {
      java.lang.Object ref = explanation_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          explanation_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string explanation = 2;</code>
     */
    public com.google.protobuf.ByteString
        getExplanationBytes() {
      java.lang.Object ref = explanation_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        explanation_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      code_ = "";
      explanation_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getCodeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getExplanationBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getCodeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getExplanationBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static net.plan99.payfile.Payfile.Error parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.plan99.payfile.Payfile.Error parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.plan99.payfile.Payfile.Error parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.plan99.payfile.Payfile.Error parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.plan99.payfile.Payfile.Error parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.plan99.payfile.Payfile.Error parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.plan99.payfile.Payfile.Error parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.plan99.payfile.Payfile.Error parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.plan99.payfile.Payfile.Error parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.plan99.payfile.Payfile.Error parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.plan99.payfile.Payfile.Error prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code net.plan99.payfile.Error}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements net.plan99.payfile.Payfile.ErrorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_Error_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_Error_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.plan99.payfile.Payfile.Error.class, net.plan99.payfile.Payfile.Error.Builder.class);
      }

      // Construct using net.plan99.payfile.Payfile.Error.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        code_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        explanation_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.plan99.payfile.Payfile.internal_static_net_plan99_payfile_Error_descriptor;
      }

      public net.plan99.payfile.Payfile.Error getDefaultInstanceForType() {
        return net.plan99.payfile.Payfile.Error.getDefaultInstance();
      }

      public net.plan99.payfile.Payfile.Error build() {
        net.plan99.payfile.Payfile.Error result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.plan99.payfile.Payfile.Error buildPartial() {
        net.plan99.payfile.Payfile.Error result = new net.plan99.payfile.Payfile.Error(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.code_ = code_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.explanation_ = explanation_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.plan99.payfile.Payfile.Error) {
          return mergeFrom((net.plan99.payfile.Payfile.Error)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.plan99.payfile.Payfile.Error other) {
        if (other == net.plan99.payfile.Payfile.Error.getDefaultInstance()) return this;
        if (other.hasCode()) {
          bitField0_ |= 0x00000001;
          code_ = other.code_;
          onChanged();
        }
        if (other.hasExplanation()) {
          bitField0_ |= 0x00000002;
          explanation_ = other.explanation_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCode()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.plan99.payfile.Payfile.Error parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.plan99.payfile.Payfile.Error) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string code = 1;
      private java.lang.Object code_ = "";
      /**
       * <code>required string code = 1;</code>
       */
      public boolean hasCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string code = 1;</code>
       */
      public java.lang.String getCode() {
        java.lang.Object ref = code_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          code_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string code = 1;</code>
       */
      public com.google.protobuf.ByteString
          getCodeBytes() {
        java.lang.Object ref = code_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          code_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string code = 1;</code>
       */
      public Builder setCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string code = 1;</code>
       */
      public Builder clearCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        code_ = getDefaultInstance().getCode();
        onChanged();
        return this;
      }
      /**
       * <code>required string code = 1;</code>
       */
      public Builder setCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        code_ = value;
        onChanged();
        return this;
      }

      // optional string explanation = 2;
      private java.lang.Object explanation_ = "";
      /**
       * <code>optional string explanation = 2;</code>
       */
      public boolean hasExplanation() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string explanation = 2;</code>
       */
      public java.lang.String getExplanation() {
        java.lang.Object ref = explanation_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          explanation_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string explanation = 2;</code>
       */
      public com.google.protobuf.ByteString
          getExplanationBytes() {
        java.lang.Object ref = explanation_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          explanation_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string explanation = 2;</code>
       */
      public Builder setExplanation(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        explanation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string explanation = 2;</code>
       */
      public Builder clearExplanation() {
        bitField0_ = (bitField0_ & ~0x00000002);
        explanation_ = getDefaultInstance().getExplanation();
        onChanged();
        return this;
      }
      /**
       * <code>optional string explanation = 2;</code>
       */
      public Builder setExplanationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        explanation_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:net.plan99.payfile.Error)
    }

    static {
      defaultInstance = new Error(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:net.plan99.payfile.Error)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_net_plan99_payfile_PayFileMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_net_plan99_payfile_PayFileMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_net_plan99_payfile_QueryFiles_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_net_plan99_payfile_QueryFiles_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_net_plan99_payfile_File_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_net_plan99_payfile_File_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_net_plan99_payfile_Manifest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_net_plan99_payfile_Manifest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_net_plan99_payfile_DownloadChunk_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_net_plan99_payfile_DownloadChunk_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_net_plan99_payfile_Data_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_net_plan99_payfile_Data_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_net_plan99_payfile_Error_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_net_plan99_payfile_Error_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rpayfile.proto\022\022net.plan99.payfile\"\247\003\n\016" +
      "PayFileMessage\0225\n\004type\030\001 \002(\0162\'.net.plan9" +
      "9.payfile.PayFileMessage.Type\0223\n\013query_f" +
      "iles\030\002 \001(\0132\036.net.plan99.payfile.QueryFil" +
      "es\022.\n\010manifest\030\003 \001(\0132\034.net.plan99.payfil" +
      "e.Manifest\022\017\n\007payment\030\004 \001(\014\0229\n\016download_" +
      "chunk\030\005 \001(\0132!.net.plan99.payfile.Downloa" +
      "dChunk\022&\n\004data\030\006 \001(\0132\030.net.plan99.payfil" +
      "e.Data\022(\n\005error\030\007 \001(\0132\031.net.plan99.payfi" +
      "le.Error\"[\n\004Type\022\017\n\013QUERY_FILES\020\001\022\014\n\010MAN",
      "IFEST\020\002\022\013\n\007PAYMENT\020\003\022\022\n\016DOWNLOAD_CHUNK\020\004" +
      "\022\010\n\004DATA\020\005\022\t\n\005ERROR\020\006\"9\n\nQueryFiles\022\022\n\nu" +
      "ser_agent\030\001 \002(\t\022\027\n\017bitcoin_network\030\002 \002(\t" +
      "\"e\n\004File\022\021\n\tfile_name\030\001 \002(\t\022\014\n\004size\030\002 \002(" +
      "\003\022\023\n\013description\030\003 \001(\t\022\027\n\017price_per_chun" +
      "k\030\004 \002(\005\022\016\n\006handle\030\005 \002(\005\"G\n\010Manifest\022\'\n\005f" +
      "iles\030\001 \003(\0132\030.net.plan99.payfile.File\022\022\n\n" +
      "chunk_size\030\002 \002(\005\"H\n\rDownloadChunk\022\016\n\006han" +
      "dle\030\001 \002(\005\022\020\n\010chunk_id\030\002 \002(\003\022\025\n\nnum_chunk" +
      "s\030\003 \001(\005:\0011\"6\n\004Data\022\016\n\006handle\030\001 \002(\005\022\020\n\010ch",
      "unk_id\030\002 \002(\003\022\014\n\004data\030\003 \002(\014\"*\n\005Error\022\014\n\004c" +
      "ode\030\001 \002(\t\022\023\n\013explanation\030\002 \001(\t"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_net_plan99_payfile_PayFileMessage_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_net_plan99_payfile_PayFileMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_net_plan99_payfile_PayFileMessage_descriptor,
              new java.lang.String[] { "Type", "QueryFiles", "Manifest", "Payment", "DownloadChunk", "Data", "Error", });
          internal_static_net_plan99_payfile_QueryFiles_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_net_plan99_payfile_QueryFiles_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_net_plan99_payfile_QueryFiles_descriptor,
              new java.lang.String[] { "UserAgent", "BitcoinNetwork", });
          internal_static_net_plan99_payfile_File_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_net_plan99_payfile_File_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_net_plan99_payfile_File_descriptor,
              new java.lang.String[] { "FileName", "Size", "Description", "PricePerChunk", "Handle", });
          internal_static_net_plan99_payfile_Manifest_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_net_plan99_payfile_Manifest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_net_plan99_payfile_Manifest_descriptor,
              new java.lang.String[] { "Files", "ChunkSize", });
          internal_static_net_plan99_payfile_DownloadChunk_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_net_plan99_payfile_DownloadChunk_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_net_plan99_payfile_DownloadChunk_descriptor,
              new java.lang.String[] { "Handle", "ChunkId", "NumChunks", });
          internal_static_net_plan99_payfile_Data_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_net_plan99_payfile_Data_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_net_plan99_payfile_Data_descriptor,
              new java.lang.String[] { "Handle", "ChunkId", "Data", });
          internal_static_net_plan99_payfile_Error_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_net_plan99_payfile_Error_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_net_plan99_payfile_Error_descriptor,
              new java.lang.String[] { "Code", "Explanation", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
